{"ast":null,"code":"import auth from \"./authentication.js\";\nexport async function jsonRequest(url, method, body, isAuthorized, skipResult) {\n  let headers = {};\n  let username = 'cp4ba-admin';\n  let password = 'P@ssw0rd.2022!';\n  if (method === undefined) {\n    method = 'Get';\n  }\n  if (['post', 'put', 'patch', 'delete'].includes(method.toLowerCase())) {\n    headers['Content-Type'] = 'application/json';\n  }\n  if (isAuthorized) {\n    headers['Authorization'] = 'Basic ' + btoa(username + \":\" + password);\n  }\n  let options = {\n    headers,\n    method,\n    mode: 'no-cors'\n  };\n  if (body != undefined) {\n    options.body = JSON.stringify(body);\n  }\n  let response = await fetch(url, options);\n  if (!response.ok) {\n    let message = await response.text();\n    throw new Error(`${response.status}: ${response.statusText}\\n${message}`);\n  }\n  let result = undefined;\n  if (!skipResult) {\n    result = await response.json();\n  }\n  return result;\n}","map":{"version":3,"names":["auth","jsonRequest","url","method","body","isAuthorized","skipResult","headers","username","password","undefined","includes","toLowerCase","btoa","options","mode","JSON","stringify","response","fetch","ok","message","text","Error","status","statusText","result","json"],"sources":["C:/Users/AnatoliDimitrov/Projects/bawreact/src/services/http.js"],"sourcesContent":["import auth from \"./authentication.js\";\n\nexport async function jsonRequest(url, method, body, isAuthorized, skipResult) {\n    let headers = {};\n    let username = 'cp4ba-admin';\n    let password = 'P@ssw0rd.2022!';\n\n    if (method === undefined) {\n        method = 'Get';\n    }\n\n    if (['post', 'put', 'patch', 'delete'].includes(method.toLowerCase())) {\n        headers['Content-Type'] = 'application/json';\n    }\n\n    if (isAuthorized) {\n        headers['Authorization'] = 'Basic ' + btoa(username + \":\" + password);\n    }\n\n    let options = {\n        headers,\n        method,\n        mode: 'no-cors'\n    };\n\n    if (body != undefined) {\n        options.body = JSON.stringify(body);\n    }\n\n    let response = await fetch(url, options);\n\n    if (!response.ok) {\n        let message = await response.text();\n        throw new Error(`${response.status}: ${response.statusText}\\n${message}`);\n    }\n\n    let result = undefined;\n    if (!skipResult) {\n        result = await response.json();\n    }\n\n    return result;\n}"],"mappings":"AAAA,OAAOA,IAAI,MAAM,qBAAqB;AAEtC,OAAO,eAAeC,WAAW,CAACC,GAAG,EAAEC,MAAM,EAAEC,IAAI,EAAEC,YAAY,EAAEC,UAAU,EAAE;EAC3E,IAAIC,OAAO,GAAG,CAAC,CAAC;EAChB,IAAIC,QAAQ,GAAG,aAAa;EAC5B,IAAIC,QAAQ,GAAG,gBAAgB;EAE/B,IAAIN,MAAM,KAAKO,SAAS,EAAE;IACtBP,MAAM,GAAG,KAAK;EAClB;EAEA,IAAI,CAAC,MAAM,EAAE,KAAK,EAAE,OAAO,EAAE,QAAQ,CAAC,CAACQ,QAAQ,CAACR,MAAM,CAACS,WAAW,EAAE,CAAC,EAAE;IACnEL,OAAO,CAAC,cAAc,CAAC,GAAG,kBAAkB;EAChD;EAEA,IAAIF,YAAY,EAAE;IACdE,OAAO,CAAC,eAAe,CAAC,GAAG,QAAQ,GAAGM,IAAI,CAACL,QAAQ,GAAG,GAAG,GAAGC,QAAQ,CAAC;EACzE;EAEA,IAAIK,OAAO,GAAG;IACVP,OAAO;IACPJ,MAAM;IACNY,IAAI,EAAE;EACV,CAAC;EAED,IAAIX,IAAI,IAAIM,SAAS,EAAE;IACnBI,OAAO,CAACV,IAAI,GAAGY,IAAI,CAACC,SAAS,CAACb,IAAI,CAAC;EACvC;EAEA,IAAIc,QAAQ,GAAG,MAAMC,KAAK,CAACjB,GAAG,EAAEY,OAAO,CAAC;EAExC,IAAI,CAACI,QAAQ,CAACE,EAAE,EAAE;IACd,IAAIC,OAAO,GAAG,MAAMH,QAAQ,CAACI,IAAI,EAAE;IACnC,MAAM,IAAIC,KAAK,CAAE,GAAEL,QAAQ,CAACM,MAAO,KAAIN,QAAQ,CAACO,UAAW,KAAIJ,OAAQ,EAAC,CAAC;EAC7E;EAEA,IAAIK,MAAM,GAAGhB,SAAS;EACtB,IAAI,CAACJ,UAAU,EAAE;IACboB,MAAM,GAAG,MAAMR,QAAQ,CAACS,IAAI,EAAE;EAClC;EAEA,OAAOD,MAAM;AACjB"},"metadata":{},"sourceType":"module","externalDependencies":[]}